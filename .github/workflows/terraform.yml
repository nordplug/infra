name: Terraform Infrastructure

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'eu-north-1'

jobs:
  validate:
    name: 🔍 Terraform Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: 🔍 Terraform Format Check
        run: terraform fmt -check -recursive
      
      - name: ⚙️ Terraform Init
        run: terraform init -backend=false
      
      - name: ✅ Terraform Validate
        run: terraform validate

  plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: ⚙️ Terraform Init
        run: terraform init
      
      - name: 📋 Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -no-color
        env:
          TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

  apply:
    name: 🚀 Terraform Apply
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: ⚙️ Terraform Init
        run: terraform init
      
      - name: 📋 Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -out=tfplan
        env:
          TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      
      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve tfplan
      
      - name: 📊 Output Infrastructure Info
        run: |
          echo "🎉 Infrastructure deployment completed!"
          echo "📍 Region: ${{ env.AWS_REGION }}"
          terraform output -json > infrastructure-outputs.json
          cat infrastructure-outputs.json
      
      - name: 📤 Upload outputs
        uses: actions/upload-artifact@v3
        with:
          name: terraform-outputs
          path: infrastructure-outputs.json

  destroy:
    name: 💥 Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment: destroy
    
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: ⚙️ Terraform Init
        run: terraform init
      
      - name: 💥 Terraform Destroy
        run: terraform destroy -var-file="terraform.tfvars" -auto-approve
        env:
          TF_VAR_aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}